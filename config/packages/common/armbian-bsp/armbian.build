#!/bin/bash

# create directories
mkdir -p $upperdir/usr/share/armbian/

bootscript_src=${BOOTSCRIPT%%:*}
bootscript_dst=${BOOTSCRIPT##*:}

cp $lowerdir/config/bootscripts/$bootscript_src $upperdir/usr/share/armbian/$bootscript_dst

if [[ -n $BOOTENV_FILE && -f $lowerdir/config/bootenv/$BOOTENV_FILE ]]; then
	cp $lowerdir/config/bootenv/$BOOTENV_FILE $upperdir/usr/share/armbian/armbianEnv.txt
fi

# add configuration for setting uboot environment from userspace with: fw_setenv fw_printenv
if [[ -n $UBOOT_FW_ENV ]]; then
	UBOOT_FW_ENV=($(tr ',' ' ' <<< "$UBOOT_FW_ENV"))
	mkdir -p $upperdir/etc
	echo "# Device to access      offset           env size" > $upperdir/etc/fw_env.config
	echo "/dev/mmcblk0	${UBOOT_FW_ENV[0]}	${UBOOT_FW_ENV[1]}" >> $upperdir/etc/fw_env.config
fi

# configure MIN / MAX speed for cpufrequtils
cat <<-EOF > $destination/etc/default/cpufrequtils
# WARNING: this file will be replaced on board support package (linux-root-...) upgrade
ENABLE=true
MIN_SPEED=$CPUMIN
MAX_SPEED=$CPUMAX
GOVERNOR=$GOVERNOR
EOF

# armhwinfo, firstrun, armbianmonitor, etc. config file
cat <<-EOF > $destination/etc/armbian-release
# PLEASE DO NOT EDIT THIS FILE
BOARD=$BOARD
BOARD_NAME="$BOARD_NAME"
BOARDFAMILY=${BOARDFAMILY}
VERSION=$REVISION
LINUXFAMILY=$LINUXFAMILY
BRANCH=$BRANCH
ARCH=$ARCHITECTURE
IMAGE_TYPE=$IMAGE_TYPE
BOARD_TYPE=$BOARD_TYPE
INITRD_ARCH=$INITRD_ARCH
KERNEL_IMAGE_TYPE=$KERNEL_IMAGE_TYPE
EOF


	# this is required for NFS boot to prevent deconfiguring the network on shutdown
	[[ $RELEASE == xenial || $RELEASE == stretch || $RELEASE == bionic ]] && sed -i 's/#no-auto-down/no-auto-down/g' $upperdir/etc/network/interfaces.default

	if [[ ( $LINUXFAMILY == sun*i || $LINUXFAMILY == pine64 ) && $BRANCH == default ]]; then
		# add mpv config for vdpau_sunxi
		mkdir -p $upperdir/etc/mpv/
		cp $lowerdir/packages/bsp/mpv/mpv_sunxi.conf $upperdir/etc/mpv/mpv.conf
		echo "export VDPAU_OSD=1" > $upperdir/etc/profile.d/90-vdpau.sh
		chmod 755 $upperdir/etc/profile.d/90-vdpau.sh
	fi

	if [[ $LINUXFAMILY == sunxi* && $BRANCH != default ]]; then
		# add mpv config for x11 output - slow, but it works compared to no config at all
		# TODO: Test which output driver is better with DRM
		mkdir -p $upperdir/etc/mpv/
		cp $lowerdir/packages/bsp/mpv/mpv_mainline.conf $upperdir/etc/mpv/mpv.conf
	fi

	case $RELEASE in
	jessie)
		mkdir -p $upperdir/etc/NetworkManager/dispatcher.d/
		install -m 755 $lowerdir/packages/bsp/99disable-power-management $upperdir/etc/NetworkManager/dispatcher.d/
	;;

	xenial)
		mkdir -p $upperdir/usr/lib/NetworkManager/conf.d/
		cp $lowerdir/packages/bsp/zz-override-wifi-powersave-off.conf $upperdir/usr/lib/NetworkManager/conf.d/
		if [[ $BRANCH == default ]]; then
			# this is required only for old kernels
			# not needed for Stretch since there will be no Stretch images with kernels < 4.4
			mkdir -p $upperdir/lib/systemd/system/haveged.service.d/
			cp $lowerdir/packages/bsp/10-no-new-privileges.conf $upperdir/lib/systemd/system/haveged.service.d/
		fi
	;;

	stretch)
		mkdir -p $upperdir/usr/lib/NetworkManager/conf.d/
		cp $lowerdir/packages/bsp/zz-override-wifi-powersave-off.conf $upperdir/usr/lib/NetworkManager/conf.d/
		cp $lowerdir/packages/bsp/10-override-random-mac.conf $upperdir/usr/lib/NetworkManager/conf.d/
	;;

	bionic)
		mkdir -p $upperdir/usr/lib/NetworkManager/conf.d/
		cp $lowerdir/packages/bsp/zz-override-wifi-powersave-off.conf $upperdir/usr/lib/NetworkManager/conf.d/
		cp $lowerdir/packages/bsp/10-override-random-mac.conf $upperdir/usr/lib/NetworkManager/conf.d/
	;;

	esac

	# execute $LINUXFAMILY-specific tweaks
	[[ $(type -t family_tweaks_bsp) == function ]] && family_tweaks_bsp

	# add some summary to the image
	fingerprint_image "$upperdir/etc/armbian.txt"

	# fixing permissions (basic), reference: dh_fixperms
	find $upperdir -print0 2>/dev/null | xargs -0r chown --no-dereference 0:0
	find $upperdir ! -type l -print0 2>/dev/null | xargs -0r chmod 'go=rX,u+rw,a-s'